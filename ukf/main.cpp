#include <iostream>
#include<Eigen/Dense>
#include "unscented.h"

using Eigen::MatrixXd;
using Eigen::VectorXd;
using std::cout;
using std::endl;

int main() {

	// Create a UKF instance
	UKF ukf;

	int n_x(5);

	// set example state
	VectorXd x(n_x);
	x << 5.7441,
		1.3800,
		2.2049,
		0.5015,
		0.3528;

	// set example covariance matrix
	MatrixXd P = MatrixXd(n_x, n_x);
	P << 0.0043, -0.0013, 0.0030, -0.0022, -0.0020,
		-0.0013, 0.0077, 0.0011, 0.0071, 0.0060,
		0.0030, 0.0011, 0.0054, 0.0007, 0.0008,
		-0.0022, 0.0071, 0.0007, 0.0098, 0.0100,
		-0.0020, 0.0060, 0.0008, 0.0100, 0.0123;

	//Set noise mean to 0 :
	VectorXd noise = VectorXd::Zero(2);

	//Set noise covariance matrix to sigma_a^2 and sigma_yaw^2
	double sigma_a(0.2*0.2), sigma_yaw(0.2*0.2);

	MatrixXd Q(2, 2);
	Q << sigma_a , 0,
		 0,sigma_yaw;



	MatrixXd Xsig = MatrixXd(5, 11);
	ukf.GenerateSigmaPoints(x,P,&Xsig);

	// print result
	//std::cout << "Xsig = " << std::endl << Xsig << std::endl;

	/**
 * expected result:
 * Xsig =
 *  5.7441  5.85768   5.7441   5.7441   5.7441   5.7441  5.63052   5.7441   5.7441   5.7441   5.7441
 *    1.38  1.34566  1.52806     1.38     1.38     1.38  1.41434  1.23194     1.38     1.38     1.38
 *  2.2049  2.28414  2.24557  2.29582   2.2049   2.2049  2.12566  2.16423  2.11398   2.2049   2.2049
 *  0.5015  0.44339 0.631886 0.516923 0.595227   0.5015  0.55961 0.371114 0.486077 0.407773   0.5015
 *  0.3528 0.299973 0.462123 0.376339  0.48417 0.418721 0.405627 0.243477 0.329261  0.22143 0.286879
 */


	ukf.AugmentedSigmaPoints(x, P, noise, Q,&Xsig);
	// print result
	std::cout << "Xsig = " << std::endl << Xsig << std::endl;

	/*
		5.7441  5.85768   5.7441   5.7441   5.7441   5.7441   5.7441   5.7441  5.63052   5.7441   5.7441   5.7441   5.7441   5.7441   5.7441
		1.38  1.34566  1.52806     1.38     1.38     1.38     1.38     1.38  1.41434  1.23194     1.38     1.38     1.38     1.38     1.38
		2.2049  2.28414  2.24557  2.29582   2.2049   2.2049   2.2049   2.2049  2.12566  2.16423  2.11398   2.2049   2.2049   2.2049   2.2049
		0.5015  0.44339 0.631886 0.516923 0.595227   0.5015   0.5015   0.5015  0.55961 0.371114 0.486077 0.407773   0.5015   0.5015   0.5015
		0.3528 0.299973 0.462123 0.376339  0.48417 0.418721   0.3528   0.3528 0.405627 0.243477 0.329261  0.22143 0.286879   0.3528   0.3528
		0        0        0        0        0        0  0.34641        0        0        0        0        0        0 - 0.34641        0
		0        0        0        0        0        0        0  0.34641        0        0        0        0        0        0 - 0.34641
	*/




	MatrixXd Pred_Sig= MatrixXd(5, 15);
	ukf.SigmaPointPrediction(Xsig,&Pred_Sig);

	cout << "The predictions are : \n" << Pred_Sig <<endl;

	/*
		5.93553   6.0625  5.92217   5.9415  5.92361  5.93516  5.93705  5.93553  5.80833  5.94481  5.92935  5.94553  5.93589  5.93401  5.93553
		1.48939  1.44673  1.66483  1.49719    1.508  1.49001  1.49022  1.48939   1.5308  1.31288  1.48182  1.46967  1.48876  1.48855  1.48939
		2.2049  2.28414  2.24557  2.29582   2.2049   2.2049  2.23954   2.2049  2.12566  2.16423  2.11398   2.2049   2.2049  2.17026   2.2049
		0.53678 0.473388 0.678099 0.554557 0.643644 0.543372  0.53678 0.538512 0.600172 0.395461 0.519003 0.429916 0.530188  0.53678 0.535048
		 0.3528 0.299973 0.462123 0.376339  0.48417 0.418721   0.3528 0.387441 0.405627 0.243477 0.329261  0.22143 0.286879   0.3528 0.318159
	
	*/


	return 0;
}